// Generated from c:/Users/Bruno/Documents/analizador-c-js/grammar/CParser.g4 by ANTLR 4.13.1
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast", "CheckReturnValue", "this-escape"})
public class CParserLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.13.1", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		IF=1, ELSE=2, WHILE=3, RETURN=4, INT_TYPE=5, VOID_TYPE=6, PRINTF=7, ID=8, 
		INT=9, STRING=10, ASSIGN=11, PLUS=12, MINUS=13, MULT=14, DIV=15, LT=16, 
		LE=17, GT=18, GE=19, EQ=20, NE=21, LPAREN=22, RPAREN=23, LBRACE=24, RBRACE=25, 
		SEMICOLON=26, COMMA=27, WS=28, COMMENT=29, BLOCK_COMMENT=30;
	public static String[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	private static String[] makeRuleNames() {
		return new String[] {
			"IF", "ELSE", "WHILE", "RETURN", "INT_TYPE", "VOID_TYPE", "PRINTF", "ID", 
			"INT", "STRING", "ASSIGN", "PLUS", "MINUS", "MULT", "DIV", "LT", "LE", 
			"GT", "GE", "EQ", "NE", "LPAREN", "RPAREN", "LBRACE", "RBRACE", "SEMICOLON", 
			"COMMA", "WS", "COMMENT", "BLOCK_COMMENT"
		};
	}
	public static final String[] ruleNames = makeRuleNames();

	private static String[] makeLiteralNames() {
		return new String[] {
			null, "'if'", "'else'", "'while'", "'return'", "'int'", "'void'", "'printf'", 
			null, null, null, "'='", "'+'", "'-'", "'*'", "'/'", "'<'", "'<='", "'>'", 
			"'>='", "'=='", "'!='", "'('", "')'", "'{'", "'}'", "';'", "','"
		};
	}
	private static final String[] _LITERAL_NAMES = makeLiteralNames();
	private static String[] makeSymbolicNames() {
		return new String[] {
			null, "IF", "ELSE", "WHILE", "RETURN", "INT_TYPE", "VOID_TYPE", "PRINTF", 
			"ID", "INT", "STRING", "ASSIGN", "PLUS", "MINUS", "MULT", "DIV", "LT", 
			"LE", "GT", "GE", "EQ", "NE", "LPAREN", "RPAREN", "LBRACE", "RBRACE", 
			"SEMICOLON", "COMMA", "WS", "COMMENT", "BLOCK_COMMENT"
		};
	}
	private static final String[] _SYMBOLIC_NAMES = makeSymbolicNames();
	public static final Vocabulary VOCABULARY = new VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);

	/**
	 * @deprecated Use {@link #VOCABULARY} instead.
	 */
	@Deprecated
	public static final String[] tokenNames;
	static {
		tokenNames = new String[_SYMBOLIC_NAMES.length];
		for (int i = 0; i < tokenNames.length; i++) {
			tokenNames[i] = VOCABULARY.getLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = VOCABULARY.getSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}
	}

	@Override
	@Deprecated
	public String[] getTokenNames() {
		return tokenNames;
	}

	@Override

	public Vocabulary getVocabulary() {
		return VOCABULARY;
	}


	public CParserLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "CParser.g4"; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getChannelNames() { return channelNames; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\u0004\u0000\u001e\u00bf\u0006\uffff\uffff\u0002\u0000\u0007\u0000\u0002"+
		"\u0001\u0007\u0001\u0002\u0002\u0007\u0002\u0002\u0003\u0007\u0003\u0002"+
		"\u0004\u0007\u0004\u0002\u0005\u0007\u0005\u0002\u0006\u0007\u0006\u0002"+
		"\u0007\u0007\u0007\u0002\b\u0007\b\u0002\t\u0007\t\u0002\n\u0007\n\u0002"+
		"\u000b\u0007\u000b\u0002\f\u0007\f\u0002\r\u0007\r\u0002\u000e\u0007\u000e"+
		"\u0002\u000f\u0007\u000f\u0002\u0010\u0007\u0010\u0002\u0011\u0007\u0011"+
		"\u0002\u0012\u0007\u0012\u0002\u0013\u0007\u0013\u0002\u0014\u0007\u0014"+
		"\u0002\u0015\u0007\u0015\u0002\u0016\u0007\u0016\u0002\u0017\u0007\u0017"+
		"\u0002\u0018\u0007\u0018\u0002\u0019\u0007\u0019\u0002\u001a\u0007\u001a"+
		"\u0002\u001b\u0007\u001b\u0002\u001c\u0007\u001c\u0002\u001d\u0007\u001d"+
		"\u0001\u0000\u0001\u0000\u0001\u0000\u0001\u0001\u0001\u0001\u0001\u0001"+
		"\u0001\u0001\u0001\u0001\u0001\u0002\u0001\u0002\u0001\u0002\u0001\u0002"+
		"\u0001\u0002\u0001\u0002\u0001\u0003\u0001\u0003\u0001\u0003\u0001\u0003"+
		"\u0001\u0003\u0001\u0003\u0001\u0003\u0001\u0004\u0001\u0004\u0001\u0004"+
		"\u0001\u0004\u0001\u0005\u0001\u0005\u0001\u0005\u0001\u0005\u0001\u0005"+
		"\u0001\u0006\u0001\u0006\u0001\u0006\u0001\u0006\u0001\u0006\u0001\u0006"+
		"\u0001\u0006\u0001\u0007\u0001\u0007\u0005\u0007e\b\u0007\n\u0007\f\u0007"+
		"h\t\u0007\u0001\b\u0004\bk\b\b\u000b\b\f\bl\u0001\t\u0001\t\u0001\t\u0001"+
		"\t\u0005\ts\b\t\n\t\f\tv\t\t\u0001\t\u0001\t\u0001\n\u0001\n\u0001\u000b"+
		"\u0001\u000b\u0001\f\u0001\f\u0001\r\u0001\r\u0001\u000e\u0001\u000e\u0001"+
		"\u000f\u0001\u000f\u0001\u0010\u0001\u0010\u0001\u0010\u0001\u0011\u0001"+
		"\u0011\u0001\u0012\u0001\u0012\u0001\u0012\u0001\u0013\u0001\u0013\u0001"+
		"\u0013\u0001\u0014\u0001\u0014\u0001\u0014\u0001\u0015\u0001\u0015\u0001"+
		"\u0016\u0001\u0016\u0001\u0017\u0001\u0017\u0001\u0018\u0001\u0018\u0001"+
		"\u0019\u0001\u0019\u0001\u001a\u0001\u001a\u0001\u001b\u0004\u001b\u00a1"+
		"\b\u001b\u000b\u001b\f\u001b\u00a2\u0001\u001b\u0001\u001b\u0001\u001c"+
		"\u0001\u001c\u0001\u001c\u0001\u001c\u0005\u001c\u00ab\b\u001c\n\u001c"+
		"\f\u001c\u00ae\t\u001c\u0001\u001c\u0001\u001c\u0001\u001d\u0001\u001d"+
		"\u0001\u001d\u0001\u001d\u0005\u001d\u00b6\b\u001d\n\u001d\f\u001d\u00b9"+
		"\t\u001d\u0001\u001d\u0001\u001d\u0001\u001d\u0001\u001d\u0001\u001d\u0001"+
		"\u00b7\u0000\u001e\u0001\u0001\u0003\u0002\u0005\u0003\u0007\u0004\t\u0005"+
		"\u000b\u0006\r\u0007\u000f\b\u0011\t\u0013\n\u0015\u000b\u0017\f\u0019"+
		"\r\u001b\u000e\u001d\u000f\u001f\u0010!\u0011#\u0012%\u0013\'\u0014)\u0015"+
		"+\u0016-\u0017/\u00181\u00193\u001a5\u001b7\u001c9\u001d;\u001e\u0001"+
		"\u0000\u0006\u0003\u0000AZ__az\u0004\u000009AZ__az\u0001\u000009\u0003"+
		"\u0000\n\n\r\r\"\"\u0003\u0000\t\n\r\r  \u0002\u0000\n\n\r\r\u00c5\u0000"+
		"\u0001\u0001\u0000\u0000\u0000\u0000\u0003\u0001\u0000\u0000\u0000\u0000"+
		"\u0005\u0001\u0000\u0000\u0000\u0000\u0007\u0001\u0000\u0000\u0000\u0000"+
		"\t\u0001\u0000\u0000\u0000\u0000\u000b\u0001\u0000\u0000\u0000\u0000\r"+
		"\u0001\u0000\u0000\u0000\u0000\u000f\u0001\u0000\u0000\u0000\u0000\u0011"+
		"\u0001\u0000\u0000\u0000\u0000\u0013\u0001\u0000\u0000\u0000\u0000\u0015"+
		"\u0001\u0000\u0000\u0000\u0000\u0017\u0001\u0000\u0000\u0000\u0000\u0019"+
		"\u0001\u0000\u0000\u0000\u0000\u001b\u0001\u0000\u0000\u0000\u0000\u001d"+
		"\u0001\u0000\u0000\u0000\u0000\u001f\u0001\u0000\u0000\u0000\u0000!\u0001"+
		"\u0000\u0000\u0000\u0000#\u0001\u0000\u0000\u0000\u0000%\u0001\u0000\u0000"+
		"\u0000\u0000\'\u0001\u0000\u0000\u0000\u0000)\u0001\u0000\u0000\u0000"+
		"\u0000+\u0001\u0000\u0000\u0000\u0000-\u0001\u0000\u0000\u0000\u0000/"+
		"\u0001\u0000\u0000\u0000\u00001\u0001\u0000\u0000\u0000\u00003\u0001\u0000"+
		"\u0000\u0000\u00005\u0001\u0000\u0000\u0000\u00007\u0001\u0000\u0000\u0000"+
		"\u00009\u0001\u0000\u0000\u0000\u0000;\u0001\u0000\u0000\u0000\u0001="+
		"\u0001\u0000\u0000\u0000\u0003@\u0001\u0000\u0000\u0000\u0005E\u0001\u0000"+
		"\u0000\u0000\u0007K\u0001\u0000\u0000\u0000\tR\u0001\u0000\u0000\u0000"+
		"\u000bV\u0001\u0000\u0000\u0000\r[\u0001\u0000\u0000\u0000\u000fb\u0001"+
		"\u0000\u0000\u0000\u0011j\u0001\u0000\u0000\u0000\u0013n\u0001\u0000\u0000"+
		"\u0000\u0015y\u0001\u0000\u0000\u0000\u0017{\u0001\u0000\u0000\u0000\u0019"+
		"}\u0001\u0000\u0000\u0000\u001b\u007f\u0001\u0000\u0000\u0000\u001d\u0081"+
		"\u0001\u0000\u0000\u0000\u001f\u0083\u0001\u0000\u0000\u0000!\u0085\u0001"+
		"\u0000\u0000\u0000#\u0088\u0001\u0000\u0000\u0000%\u008a\u0001\u0000\u0000"+
		"\u0000\'\u008d\u0001\u0000\u0000\u0000)\u0090\u0001\u0000\u0000\u0000"+
		"+\u0093\u0001\u0000\u0000\u0000-\u0095\u0001\u0000\u0000\u0000/\u0097"+
		"\u0001\u0000\u0000\u00001\u0099\u0001\u0000\u0000\u00003\u009b\u0001\u0000"+
		"\u0000\u00005\u009d\u0001\u0000\u0000\u00007\u00a0\u0001\u0000\u0000\u0000"+
		"9\u00a6\u0001\u0000\u0000\u0000;\u00b1\u0001\u0000\u0000\u0000=>\u0005"+
		"i\u0000\u0000>?\u0005f\u0000\u0000?\u0002\u0001\u0000\u0000\u0000@A\u0005"+
		"e\u0000\u0000AB\u0005l\u0000\u0000BC\u0005s\u0000\u0000CD\u0005e\u0000"+
		"\u0000D\u0004\u0001\u0000\u0000\u0000EF\u0005w\u0000\u0000FG\u0005h\u0000"+
		"\u0000GH\u0005i\u0000\u0000HI\u0005l\u0000\u0000IJ\u0005e\u0000\u0000"+
		"J\u0006\u0001\u0000\u0000\u0000KL\u0005r\u0000\u0000LM\u0005e\u0000\u0000"+
		"MN\u0005t\u0000\u0000NO\u0005u\u0000\u0000OP\u0005r\u0000\u0000PQ\u0005"+
		"n\u0000\u0000Q\b\u0001\u0000\u0000\u0000RS\u0005i\u0000\u0000ST\u0005"+
		"n\u0000\u0000TU\u0005t\u0000\u0000U\n\u0001\u0000\u0000\u0000VW\u0005"+
		"v\u0000\u0000WX\u0005o\u0000\u0000XY\u0005i\u0000\u0000YZ\u0005d\u0000"+
		"\u0000Z\f\u0001\u0000\u0000\u0000[\\\u0005p\u0000\u0000\\]\u0005r\u0000"+
		"\u0000]^\u0005i\u0000\u0000^_\u0005n\u0000\u0000_`\u0005t\u0000\u0000"+
		"`a\u0005f\u0000\u0000a\u000e\u0001\u0000\u0000\u0000bf\u0007\u0000\u0000"+
		"\u0000ce\u0007\u0001\u0000\u0000dc\u0001\u0000\u0000\u0000eh\u0001\u0000"+
		"\u0000\u0000fd\u0001\u0000\u0000\u0000fg\u0001\u0000\u0000\u0000g\u0010"+
		"\u0001\u0000\u0000\u0000hf\u0001\u0000\u0000\u0000ik\u0007\u0002\u0000"+
		"\u0000ji\u0001\u0000\u0000\u0000kl\u0001\u0000\u0000\u0000lj\u0001\u0000"+
		"\u0000\u0000lm\u0001\u0000\u0000\u0000m\u0012\u0001\u0000\u0000\u0000"+
		"nt\u0005\"\u0000\u0000os\b\u0003\u0000\u0000pq\u0005\\\u0000\u0000qs\u0005"+
		"\"\u0000\u0000ro\u0001\u0000\u0000\u0000rp\u0001\u0000\u0000\u0000sv\u0001"+
		"\u0000\u0000\u0000tr\u0001\u0000\u0000\u0000tu\u0001\u0000\u0000\u0000"+
		"uw\u0001\u0000\u0000\u0000vt\u0001\u0000\u0000\u0000wx\u0005\"\u0000\u0000"+
		"x\u0014\u0001\u0000\u0000\u0000yz\u0005=\u0000\u0000z\u0016\u0001\u0000"+
		"\u0000\u0000{|\u0005+\u0000\u0000|\u0018\u0001\u0000\u0000\u0000}~\u0005"+
		"-\u0000\u0000~\u001a\u0001\u0000\u0000\u0000\u007f\u0080\u0005*\u0000"+
		"\u0000\u0080\u001c\u0001\u0000\u0000\u0000\u0081\u0082\u0005/\u0000\u0000"+
		"\u0082\u001e\u0001\u0000\u0000\u0000\u0083\u0084\u0005<\u0000\u0000\u0084"+
		" \u0001\u0000\u0000\u0000\u0085\u0086\u0005<\u0000\u0000\u0086\u0087\u0005"+
		"=\u0000\u0000\u0087\"\u0001\u0000\u0000\u0000\u0088\u0089\u0005>\u0000"+
		"\u0000\u0089$\u0001\u0000\u0000\u0000\u008a\u008b\u0005>\u0000\u0000\u008b"+
		"\u008c\u0005=\u0000\u0000\u008c&\u0001\u0000\u0000\u0000\u008d\u008e\u0005"+
		"=\u0000\u0000\u008e\u008f\u0005=\u0000\u0000\u008f(\u0001\u0000\u0000"+
		"\u0000\u0090\u0091\u0005!\u0000\u0000\u0091\u0092\u0005=\u0000\u0000\u0092"+
		"*\u0001\u0000\u0000\u0000\u0093\u0094\u0005(\u0000\u0000\u0094,\u0001"+
		"\u0000\u0000\u0000\u0095\u0096\u0005)\u0000\u0000\u0096.\u0001\u0000\u0000"+
		"\u0000\u0097\u0098\u0005{\u0000\u0000\u00980\u0001\u0000\u0000\u0000\u0099"+
		"\u009a\u0005}\u0000\u0000\u009a2\u0001\u0000\u0000\u0000\u009b\u009c\u0005"+
		";\u0000\u0000\u009c4\u0001\u0000\u0000\u0000\u009d\u009e\u0005,\u0000"+
		"\u0000\u009e6\u0001\u0000\u0000\u0000\u009f\u00a1\u0007\u0004\u0000\u0000"+
		"\u00a0\u009f\u0001\u0000\u0000\u0000\u00a1\u00a2\u0001\u0000\u0000\u0000"+
		"\u00a2\u00a0\u0001\u0000\u0000\u0000\u00a2\u00a3\u0001\u0000\u0000\u0000"+
		"\u00a3\u00a4\u0001\u0000\u0000\u0000\u00a4\u00a5\u0006\u001b\u0000\u0000"+
		"\u00a58\u0001\u0000\u0000\u0000\u00a6\u00a7\u0005/\u0000\u0000\u00a7\u00a8"+
		"\u0005/\u0000\u0000\u00a8\u00ac\u0001\u0000\u0000\u0000\u00a9\u00ab\b"+
		"\u0005\u0000\u0000\u00aa\u00a9\u0001\u0000\u0000\u0000\u00ab\u00ae\u0001"+
		"\u0000\u0000\u0000\u00ac\u00aa\u0001\u0000\u0000\u0000\u00ac\u00ad\u0001"+
		"\u0000\u0000\u0000\u00ad\u00af\u0001\u0000\u0000\u0000\u00ae\u00ac\u0001"+
		"\u0000\u0000\u0000\u00af\u00b0\u0006\u001c\u0000\u0000\u00b0:\u0001\u0000"+
		"\u0000\u0000\u00b1\u00b2\u0005/\u0000\u0000\u00b2\u00b3\u0005*\u0000\u0000"+
		"\u00b3\u00b7\u0001\u0000\u0000\u0000\u00b4\u00b6\t\u0000\u0000\u0000\u00b5"+
		"\u00b4\u0001\u0000\u0000\u0000\u00b6\u00b9\u0001\u0000\u0000\u0000\u00b7"+
		"\u00b8\u0001\u0000\u0000\u0000\u00b7\u00b5\u0001\u0000\u0000\u0000\u00b8"+
		"\u00ba\u0001\u0000\u0000\u0000\u00b9\u00b7\u0001\u0000\u0000\u0000\u00ba"+
		"\u00bb\u0005*\u0000\u0000\u00bb\u00bc\u0005/\u0000\u0000\u00bc\u00bd\u0001"+
		"\u0000\u0000\u0000\u00bd\u00be\u0006\u001d\u0000\u0000\u00be<\u0001\u0000"+
		"\u0000\u0000\b\u0000flrt\u00a2\u00ac\u00b7\u0001\u0006\u0000\u0000";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}